@model TestProjectDomain.Entities.RegisterUsers

@{
    Layout = "~/Views/Shared/_Login.cshtml";
}
@{
    ViewBag.Title = "Registration";
}

@using (Html.BeginForm("Get", "User"))
{

    if (ViewBag.Message!=null)
    {
        <div class="err-form-container">
        <span class="field-validation-error">@ViewBag.Message</span>
            </div>
    }

    <div id="superMain" class="reg-form-container">
        <div class="margininputcontainer">
            <div class="form-input">
                @Html.LabelFor(model => model.Surname, "Фамилия")
            </div>
            <div>
                @Html.TextBoxFor(model => model.Surname, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Surname)
            </div>
        </div>
        
        <div class="margininputcontainer">
            <div class="form-input">
                @Html.LabelFor(model => model.Name, "Имя")
            </div>
            <div>
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
        </div>
        <div class="margininputcontainer">
            <div class="form-input">
                @Html.LabelFor(model => model.Email, "Email")
               
            </div>
            <div>
               
                @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email)
               
            </div>
       </div>
        <div class="margininputcontainer">
            <div class="form-input">
                @Html.LabelFor(model => model.Mobile, "Мобильный телефон")
            </div>
            <div>
                @Html.TextBoxFor(model => model.Mobile, new
           {
               @class = "form-control",
               @placeholder = "+380999999999"
           })
                @Html.ValidationMessageFor(model => model.Mobile)
            </div>
       </div>
            @if (ViewBag.isUpdateMode == null || (ViewBag.isUpdateMode != null && !ViewBag.isUpdateMode))
            {
                <div class="margininputcontainer">
                    <div class="form-input">
                        <label>Пароль</label>
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                </div>
                <div class="margininputcontainer">
                    <div class="form-input">
                        <label>Повторите пароль</label>
                        @Html.EditorFor(model => model.RetypePassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.RetypePassword)
                    </div>
                    </div>
                    <div class="margininputcontainer">
                        <div><input class="btn btn-primary" type="submit" name="Send" value="Создать" /></div>
                    </div>
            }

                    @if (ViewBag.isUpdateMode != null && ViewBag.isUpdateMode)
                    {
                                            
                        <div class="margininputcontainer">
                                <button type="submit">Обновить</button>

                        </div>

                    }
                </div>
            }


